[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Letchworth Teaching Forest Forest Structure Modeling Utilizing LiDAR Point Cloud Data",
    "section": "",
    "text": "Forest structure plays a critical role in understanding forest biodiversity and ecosystem services (MacKinnon, 2012). However, measuring forest structure through traditional field data collection is challenging due to time and funding constraints, particularly in large forests. The introduction of remote sensing has been a key driver in obtaining large forest structure data indirectly, while lessening the burden of time and funding limitations (Wulder et al., 2012). In this project, I utilized publicly available remote sensing data to answer a few questions about the Letchworth Teaching Forest’s structure and assessed the effectiveness of remote sensing as a stand-alone method for forest structure analysis.\nThese questions include:\n1. What is the approximate tree population?\n2. Where are the locations of individual trees?\n3. What is the distribution of tree heights in the study site?\n4. Where are the 90% percentile of tallest trees located?\n5. Is there spatial clustering of tall trees?"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Letchworth Teaching Forest Forest Structure Modeling Utilizing LiDAR Point Cloud Data",
    "section": "",
    "text": "Forest structure plays a critical role in understanding forest biodiversity and ecosystem services (MacKinnon, 2012). However, measuring forest structure through traditional field data collection is challenging due to time and funding constraints, particularly in large forests. The introduction of remote sensing has been a key driver in obtaining large forest structure data indirectly, while lessening the burden of time and funding limitations (Wulder et al., 2012). In this project, I utilized publicly available remote sensing data to answer a few questions about the Letchworth Teaching Forest’s structure and assessed the effectiveness of remote sensing as a stand-alone method for forest structure analysis.\nThese questions include:\n1. What is the approximate tree population?\n2. Where are the locations of individual trees?\n3. What is the distribution of tree heights in the study site?\n4. Where are the 90% percentile of tallest trees located?\n5. Is there spatial clustering of tall trees?"
  },
  {
    "objectID": "index.html#materials-and-methods",
    "href": "index.html#materials-and-methods",
    "title": "Letchworth Teaching Forest Forest Structure Modeling Utilizing LiDAR Point Cloud Data",
    "section": "Materials and methods",
    "text": "Materials and methods\nThis project utilized the most recent (2019) LiDAR point cloud data to assess vertical forest structure within the Letchworth Learning Forest near the Ellicott Complex. The LiDAR data, originally projected horizontally in NAD83 (2011) and vertically measured in meters, was processed to answer question listed above. Using the lidR and dbscan packages, Z-values from the point-cloud data were filtered and analyzed to identify individual trees, calculate tree heights, and determine spatial clustering of the tallest trees within the study area. The resulting dataset, named filterOUT_las, was re-projected into WGS84, enabling tree locations and clustering pattern visualization on an interactive Leaflet map.\nCritical R packages utilized in this project included:\nLidR\nLeaflet\ndbscan\nBelow is the R script:\n\nLoad Nessassary Packages\n\n\nScript\nlibrary(\"sf\")\nlibrary(\"terra\")\nlibrary(\"lidR\")\nlibrary(\"raster\")\nlibrary(\"dbscan\")\nlibrary(\"tidyverse\")\nlibrary(\"leaflet\")\nlibrary(\"RColorBrewer\")\nlibrary(\"rgl\")\nlibrary(\"knitr\")\n\n\n\n\nLoad USGS lidar point-cloud data of Letchworth Teaching Forest (las)\n\n\nScript\nlas &lt;- readLAS(\"data/Letchworth_Teaching_Forest_Lidar.laz\")\n\n## Look at the parameter coordinates of original data\noriginal_bbox &lt;- st_bbox(las)\nog_bbox &lt;- as.data.frame(original_bbox)\ncolnames(og_bbox) &lt;- c(\"XY Coords\")\nog_bbox\n\n\nWarning in format.data.frame(if (omit) x[seq_len(n0), , drop = FALSE] else x, :\ncorrupt data frame: columns will be truncated or padded with NAs\n\n\n                                 XY Coords\nxmin ((1387000,2349000),(1388000,2350000))\nymin                                  &lt;NA&gt;\nxmax                                  &lt;NA&gt;\nymax                                  &lt;NA&gt;\n\n\n\n\nCreate new bounding box filter out non-forested area\n\n\nScript\npolygon_coords &lt;- matrix(c(\n  1388000, 2349355, #right bottom corner\n  1388000, 2349700, #right top corner\n  1387450, 2349700, #mid top corner\n  1387450, 2349450, #mid mid corner\n  1387300, 2349200, #left bottom corner\n  1387350, 2349200, #mid bottom corner\n  1388000, 2349355  #right bottom corner\n), ncol = 2, byrow = TRUE)\n\nnew_bbox &lt;- as.data.frame (polygon_coords)\n## Bounding Box has been given CRS associated with las-CRS \npolygon_sf &lt;- st_sfc(st_polygon(list(polygon_coords)),  crs = st_crs(las))\n\ncolnames(new_bbox) &lt;- c(\"X Coord\", \"Y Coord\")\nnew_bbox\n\n\n\n\nCreate new parameter for las called filterOUT_las\n\n\nScript\nlas_clipped &lt;- lidR::clip_roi(las, polygon_sf)\n\n## Check if the crs is still the same\nst_crs(polygon_sf) == st_crs(las)\n\n## Filter out any OUTliers z-values from las\nfilterOUT_las &lt;- filter_poi(las_clipped, Z &gt;= 190, Z &lt;= 220)\n\n\n\n\nGIF of the filterOUT_las\n\n\nScript\n# plot(filterOUT_las)\n# movie3d(spin3d(axis = c(0, 0, 1), rpm = 2,), duration = 5, movie = \"data/lidar\")\n\nknitr::include_graphics(\"data/letch.gif\", error = FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCheck if new data will correctly transform to leaflet projection. Original data (las) used NAD83 (2011) projection and Leaflet uses WGS84 projection\n\n\nScript\n## Reproject the las to 4326 for Leaflet\noptions(digits = 15)\nlas84 &lt;- st_as_sf(las_clipped, coords = c(\"X\", \"Y\"), crs = 26918) # crs was NAD83(2011)\nlas84 &lt;- st_transform(las_clipped, crs = 4326)\n\n\n## Create a dataframe of points lat and long to check if st_transform worked  \nlas_df &lt;- data.frame(lat = st_coordinates(las84)[, 2],\n                     long = st_coordinates(las84)[, 1])\nunique(las_df$lat)\n\n\n[1] 43.005 43.006 43.007 43.009 43.008\n\n\nScript\nunique(las_df$long)\n\n\n [1] -78.797 -78.796 -78.795 -78.794 -78.793 -78.792 -78.791 -78.790 -78.789\n[10] -78.788 -78.787\n\n\n\n\nRasterize filterOUT_las to find trees, tree tops, and tree population. Then, create a new data set called tall_trees containg the 90th percentile of trees based on hieght(m)\n\n\nScript\n## LidR functions to find individual trees\nchm &lt;- rasterize_canopy(filterOUT_las, 0.25, pitfree(subcircle = 1))\n\ntree_tops &lt;- locate_trees(chm, lmf (ws=5))\nfiltered_tree_tops &lt;- tree_tops %&gt;%\nfilter(Z &gt;= 190)\n\n#plot(chm, col = height.colors(50))\n#plot(sf::st_geometry(filtered_tree_tops), pch = 3)\n#plot(sf::st_geometry(filtered_tree_tops), add = TRUE, pch = 3)\n\nnintypercent &lt;- quantile(filtered_tree_tops$Z, 0.90)\ntall_trees &lt;- filtered_tree_tops[filtered_tree_tops$Z &gt; nintypercent,]\n\ncoords &lt;- st_coordinates(tall_trees)\n\n\n\n\nUsing ggplot2 package to show the tree hieght distribution and population in study area.\n\n\nScript\ntree_Z &lt;- as.data.frame(filtered_tree_tops$Z)\ncolnames(tree_Z) &lt;- c(\"height\")\nind_trees &lt;- tree_Z$height - 190\nind_trees &lt;- as.data.frame(ind_trees)\n\ntall_trees_height &lt;- as.data.frame(tall_trees$Z - 190)\ncolnames(tall_trees_height) &lt;- c(\"height\")\n## in meters\n\nmean &lt;- mean(ind_trees$ind_trees)\nmean &lt;- round(mean, 2)\nsubtitle = paste(\"Total trees = \", nrow(ind_trees), \" trees \\nMean (Blue) = \", mean,\"\\n90% of tallest trees (Red)\")\n\nggplot()+\ngeom_histogram(data = ind_trees, aes(x = ind_trees), binwidth = 0.5,, color = \"black\", fill=\"green\", alpha = 0.25)+\ngeom_histogram(data = tall_trees_height, aes(x = height), binwidth = 0.5,, color = \"black\", fill=\"red\", alpha = .5)+\ngeom_vline(aes(xintercept = mean(ind_trees$ind_trees)), color=\"blue\", linetype=\"dashed\", linewidth=1)+\ntheme_classic()+\nlabs(title = \"Distribution of Tree Heights in Meters\", x = \"Height (m)\", y = \"Frequency\",\n     subtitle = subtitle,\n     caption = \"Letchworth Teaching Forest (2019)\")\n\n\n\n\n\n\n\n\n\n\n\nScript\nallT &lt;- as.data.frame (filtered_tree_tops)\nallT$Z &lt;- allT$Z - 190\nallT$Z &lt;- formatC(allT$Z, 2)\nkable(allT[1:10,], col.names = c(\"Tree ID\", \"Height (m)\", \"Location\"), align = (\"ccc\"), caption = \"First 10 Tree Heights (m)\")\n\n\n\nFirst 10 Tree Heights (m)\n\n\nTree ID\nHeight (m)\nLocation\n\n\n\n\n1\n3.7\nPOINT Z (1387490.125 234969…\n\n\n2\n2.8\nPOINT Z (1387494.875 234969…\n\n\n3\n5.6\nPOINT Z (1387469.125 234969…\n\n\n4\n2\nPOINT Z (1387848.125 234969…\n\n\n5\n8.7\nPOINT Z (1387464.625 234969…\n\n\n6\n3.3\nPOINT Z (1387470.625 234969…\n\n\n7\n6.5\nPOINT Z (1387469.875 234968…\n\n\n8\n1.8\nPOINT Z (1387479.375 234967…\n\n\n9\n3.1\nPOINT Z (1387861.375 234967…\n\n\n10\n2\nPOINT Z (1387476.625 234967…\n\n\n\n\n\nScript\nninT &lt;- as.data.frame(tall_trees)\nninT$Z &lt;- tall_trees$Z - 190\nninT$Z &lt;- formatC(ninT$Z)\nkable(ninT[1:10,1:3], col.names = c(\"Tree ID\", \"Height (m)\", \"Location\"), align = (\"ccc\"), caption = \"First 10 90th Percentile Tree Heights (m)\")\n\n\n\nFirst 10 90th Percentile Tree Heights (m)\n\n\n\nTree ID\nHeight (m)\nLocation\n\n\n\n\n223\n223\n19.71\nPOINT Z (1387784.125 234960…\n\n\n240\n240\n19.88\nPOINT Z (1387740.375 234960…\n\n\n243\n243\n19.76\nPOINT Z (1387734.875 234960…\n\n\n256\n256\n19.86\nPOINT Z (1387785.375 234959…\n\n\n307\n307\n21.54\nPOINT Z (1387736.875 234959…\n\n\n354\n354\n19.87\nPOINT Z (1387740.125 234958…\n\n\n366\n366\n19.46\nPOINT Z (1387728.625 234958…\n\n\n387\n387\n20.69\nPOINT Z (1387846.875 234958…\n\n\n452\n452\n19.55\nPOINT Z (1387777.625 234957…\n\n\n505\n505\n19.68\nPOINT Z (1387739.125 234956…\n\n\n\n\n\n\n\nLocate the tallest trees, and tree tops within the study area\n\n\nScript\nknitr::opts_chunk$set(global.device = TRUE)\n\nplot(chm, main = \"Tree Tops\")\nplot(filtered_tree_tops[2],pch = 16, cex = .5, main = \"tree_tops\", add = TRUE)\n\n\n\n\n\n\n\n\n\nScript\nplot(chm, main = \"Tallest (90%) Trees\")\nplot(tall_trees, pch = 16, cex = .5, main = \"tall_trees\", add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nLocate spatial clustering of tallest trees\n\n\nScript\nknitr::opts_chunk$set(global.device = TRUE)\n\ndbscan_result &lt;- dbscan(coords, eps = 12, minPts = 5)\n\ntall_trees$dbscan_cluster &lt;- as.factor(dbscan_result$cluster)\ncolorsize = length (unique (tall_trees$dbscan_cluster))\n\n\n## Filter out first cluster\ncluster &lt;- tall_trees %&gt;%\nfilter(dbscan_cluster != 0)\nplot(chm)\nplot(cluster[3], pch = 16, cex = .5, col = factor(cluster$dbscan_cluster), main = \"Tree Clusters\", add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nAdd locations of spatial clustering to leaflet map\n\n\nScript\npal &lt;- colorFactor(brewer.pal(4, \"Set1\"), domain = tall_trees$dbscan_cluster)\n\nst_tall_trees &lt;- st_transform(tall_trees, crs = 4326)\n\nst_tall_trees_filtered &lt;- st_tall_trees %&gt;%\n  filter(dbscan_cluster != 0)\nst_tall_trees_filtered$Z &lt;- st_tall_trees_filtered$Z - 180\n\n\nleaflet (st_tall_trees_filtered) %&gt;%\n  setView(lng = -78.793, lat = 43.007, zoom = 15)  %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    radius = 2,\n    color = ~pal(dbscan_cluster),\n    popup = ~paste(\"Tree ID:\", treeID, \"&lt;br&gt; Height (m):\", Z,\"&lt;br&gt; Coordinates:\", geometry))\n\n\n\n\n\n\n\n\nLoad any required packages in a code chunk:\n\n\nScript\n #install.packages(\"sf\")\n #install.packages(\"terra\")\n #install.packages(\"lidR\")\n #install.packages(\"raster\")\n #install.packages(\"dbscan\")\n #install.packages(\"tidyverse\")\n #install.packages(\"leaflet\")\n #install.packages(\"RColorBrewer\")\n #install.packages(\"knitr\")\n #install.packages(\"rgl\")"
  },
  {
    "objectID": "index.html#conclusions",
    "href": "index.html#conclusions",
    "title": "Letchworth Teaching Forest Forest Structure Modeling Utilizing LiDAR Point Cloud Data",
    "section": "Conclusions",
    "text": "Conclusions\nThis study demonstrates the potential of using remote sensing data to assess forest structure with promising results. The analysis indicates a total of approximately 2,018 trees, with individual tree locations identified. Spatial clustering of the tallest trees were observed in six areas. The overall average height across the entire tree population was found to be 13.02 meters. It is important to note that the results derived solely from remote sensing data and computational analysis, offer only a rough estimate of forest structure characteristics. For more precise and reliable conclusions, incorporating field data is essential to provide a reference for validating the remote sensing analysis.\nIn conclusion, while remote sensing provides a faster method for assessing forest characteristics, the inclusion of field data is crucial to ensure the accuracy and reliability of the results. Combining both approaches will offer a more comprehensive understanding of forest dynamics."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Letchworth Teaching Forest Forest Structure Modeling Utilizing LiDAR Point Cloud Data",
    "section": "References",
    "text": "References\nMacKinnon, A. (2012). Forest Structure: A Key to the Ecosystem. https://www.semanticscholar.org/paper/Forest-Structure-%3A-A-Key-to-the-Ecosystem-MacKinnon/57c825a33e087bd8797333885ebf641ed8416377\nWulder, M. A., White, J. C., Nelson, R. F., Næsset, E., Ørka, H. O., Coops, N. C., Hilker, T., Bater, C. W., & Gobakken, T. (2012). Lidar sampling for large-area forest characterization: A review. Remote Sensing of Environment, 121, 196–209. https://doi.org/10.1016/j.rse.2012.02.001"
  },
  {
    "objectID": "data/Readme.html",
    "href": "data/Readme.html",
    "title": "GEO511_FinalProject",
    "section": "",
    "text": "Place any data needed by your analysis in this folder. Please do not store large files here. Then read in any data using the ‘data’ path. For example, read_csv(\"data/data.csv\")."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]