[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tree Top Clustering at Letchworth Learning Forest",
    "section": "",
    "text": "Introduction\n[~ 200 words]\nObserving forest structure is beneficial in understanding various forest characteristics. These characteristics include biodiversity, ecosystem disturbances and possibly any threats that may affect the forest structure and ecosystem. On-site forest modeling and monitoring is difficult to preserve due to resource restrictions. Utilizing remote sensing tools can allow researchers and foresters to overcome time, labor, and funding restrictions. In this project, I utilized remote sensing data to look at the Letchworth Learning Forest structure and try to interpret forest characteristics remotely.\n\n\nMaterials and methods\n[~ 200 words]\nIn this project, I utilized 2019 remote sensing LiDAR point-cloud data to measure vertical forest structure within the Letchworth Learning Forest near the Ellicott Complex.  By looking at vertical structure, I was able to find spatial clustering of the tallest (90%) woody individuals.\nThese clusters were then projected onto the latest leaflet map, to see if the forest parameter has been altered following the remote sensing date.\nThe main r packages that were utilized were lidR, terra, and raster.\nHere’s my current on-going code.\n\nlibrary(\"sf\")\nlibrary(\"terra\")\nlibrary(\"lidR\")\nlibrary(\"raster\")\nlibrary(\"dbscan\")\nlibrary(\"tidyverse\")\nlibrary(\"leaflet\")\nlibrary(\"RColorBrewer\")\n\n\nlas &lt;- readLAS(\"data/Letchworth_Teaching_Forest_Lidar.laz\")\n#st_crs(las)\n## Look at the parameter coordinates of original data\noriginal_bbox &lt;- st_bbox(las)\n\n# plot3d(las$X, las$Y, las$Z, col = rainbow(1000))\n\n\npolygon_coords &lt;- matrix(c(\n  1388000, 2349355, #right bottom corner\n  1388000, 2349700, #right top corner\n  1387450, 2349700, #mid top corner\n  1387450, 2349450, #mid mid corner\n  1387300, 2349200, #left bottom corner\n  1387350, 2349200, #mid bottom corner\n  1388000, 2349355  #right bottom corner\n), ncol = 2, byrow = TRUE)\n\n## Bounding Box has been given CRS associated with las-CRS \npolygon_sf &lt;- st_sfc(st_polygon(list(polygon_coords)),  crs = st_crs(las))\nplot(polygon_sf)\n\n\n\n\n\n\n\n\n\nlas_clipped &lt;- lidR::clip_roi(las, polygon_sf)\n## Check if the crs is still the same\nst_crs(polygon_sf) == st_crs(las)\n\n[1] TRUE\n\n## Filter out any OUTliers z-values from las\n#filterOUT_las &lt;- filter_poi(las_clipped, Z &gt;= 182, Z &lt;= 220)\nfilterOUT_las &lt;- filter_poi(las_clipped, Z &gt;= 180, Z &lt;= 220)\n\n# rglwidget(plot(filterOUT_las))\n# plot3d(filterOUT_las$X, filterOUT_las$Y, filterOUT_las$Z)\n\n\n## Reproject the las to 4326 for Leaflet\nlas84 &lt;- st_as_sf(las_clipped, coords = c(\"X\", \"Y\"), crs = 26918) # crs was NAD83(2011)\nlas84 &lt;- st_transform(las_clipped, crs = 4326)\n\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Error 1: PROJ: vgridshift: could not find required grid(s).\n\n\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Error 1: PROJ: pipeline: Pipeline: Bad step definition: proj=vgridshift\n(File not found or invalid)\n\n\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Error 1: PROJ: vgridshift: could not find required grid(s).\n\n\nWarning in CPL_transform(x, crs, aoi, pipeline, reverse, desired_accuracy, :\nGDAL Error 1: PROJ: pipeline: Pipeline: Bad step definition: proj=vgridshift\n(File not found or invalid)\n\noptions(digits = 15)\n\n\n## Create a dataframe of points lat and long to check if st_transform worked  \nlas_df &lt;- data.frame(lat = st_coordinates(las84)[, 2],\n                     long = st_coordinates(las84)[, 1])\n\nunique(las_df$lat)\n\n[1] 43.005 43.006 43.007 43.009 43.008\n\nunique(las_df$long)\n\n [1] -78.797 -78.796 -78.795 -78.794 -78.793 -78.792 -78.791 -78.790 -78.789\n[10] -78.788 -78.787\n\n\n\n## LidR functions to find individual trees\nchm &lt;- rasterize_canopy(filterOUT_las, 0.25, pitfree(subcircle = 1))\n\ntree_tops &lt;- locate_trees(chm, lmf (ws=5))\nfiltered_tree_tops &lt;- tree_tops %&gt;%\nfilter(Z &gt;= 185)\n\n#plot(chm, col = height.colors(50))\n#plot(sf::st_geometry(filtered_tree_tops), pch = 3)\n#plot(sf::st_geometry(filtered_tree_tops), add = TRUE, pch = 3)\n\nnintypercent &lt;- quantile(filtered_tree_tops$Z, 0.90)\ntall_trees &lt;- filtered_tree_tops[filtered_tree_tops$Z &gt; nintypercent,]\n\ncoords &lt;- st_coordinates(tall_trees)\n\n\ntree_Z &lt;- as.data.frame(filtered_tree_tops$Z)\ncolnames(tree_Z) &lt;- c(\"height\")\ntest &lt;- tree_Z$height - 180\ntest &lt;- as.data.frame(test)\nmax(test)\n\n[1] 33.901\n\n## in meters\nggplot(data = test, aes(x = test)) +\ngeom_histogram(binwidth = 0.2,fill=\"black\")+\nlabs(title = \"Distrubtion of Tree Hieghts\", x = \"Hieght (m)\", y = \"Tree Count\" )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndbscan_result &lt;- dbscan(coords, eps = 12, minPts = 5)  \ntall_trees$dbscan_cluster &lt;- as.factor(dbscan_result$cluster)\nunique (tall_trees$dbscan_cluster)\n\n[1] 1 0 2 3 4 5 6 7\nLevels: 0 1 2 3 4 5 6 7\n\nplot(tall_trees[3], pch = 16, cex = .5)\n\n\n\n\n\n\n\n\n\npal &lt;- colorFactor(brewer.pal(4, \"Set1\"), domain = tall_trees$dbscan_cluster)\n\nst_tall_trees &lt;- st_transform(tall_trees, crs = 4326)\nleaflet (st_tall_trees) %&gt;%\n  setView(lng = -78.793, lat = 43.007, zoom = 13)  %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    radius = 2,\n    color = ~pal(dbscan_cluster),\n    popup = ~paste(\"ID:\", treeID, \"&lt;br&gt; Height:\", Z))\n\n\n\n\n\nLoad any required packages in a code chunk (you may need to install some packages):\n\n install.packages(\"sf\")\n install.packages(\"terra\")\n install.packages(\"lidR\")\n install.packages(\"raster\")\n install.packages(\"dbscan\")\n install.packages(\"tidyverse\")\n install.packages(\"leaflet\")\n install.packages(\"RColorBrewer\")\n install.packages(\"knitr\")\n install.packages(\"rgl\")\n\n\n\nConclusionsn\n[~200 words]\nClear summary adequately describing the results and putting them in context. Discussion of further questions and ways to continue investigation.\n\n\nReferences\nAll sources are cited in a consistent manner"
  },
  {
    "objectID": "data/Readme.html",
    "href": "data/Readme.html",
    "title": "GEO511_FinalProject",
    "section": "",
    "text": "Place any data needed by your analysis in this folder. Please do not store large files here. Then read in any data using the ‘data’ path. For example, read_csv(\"data/data.csv\")."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]